{
  "version": 3,
  "file": "mygame.js",
  "sources": [
    "src/generated/assetlist.js",
    "src/generated/scenelist.js",
    "src/template.js"
  ],
  "names": [],
  "mappings": "AAAA,urLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G",
  "sourceRoot": "/",
  "sourcesContent": [
    "define(\"mygame/assetlist\",{\"root\":{\"files\":[{\"name\":\"assets/i18n.json\",\"size\":103}],\"totalSize\":103},\"totalSize\":103});",
    "define(\"mygame/scenelist\", [\"lyria/scene\", \"lyria/template/engine\"], function(Scene, TemplateEngine) {\n\tvar sceneList = {};\n\tsceneList[\"scene1\"] = new Scene(\"scene1\", [], function() {\n\t\tthis.localization = {\r\n\t\"en\": {\r\n\t\t\"title\": \"This is \"\r\n\t},\r\n\t\"de\": {\r\n\t\t\"title\": \"Das ist \"\r\n\t}\r\n}\r\n;\n\t\tthis.template = this.template || {};\n\t\tthis.template.source = TemplateEngine.compile(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n  \";\n  stack1 = helpers.each.call(depth0, depth0.gameobject, {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n    <div id=\\\"\";\n  if (stack1 = helpers.name) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.name; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\";\n  if (stack1 = helpers.content) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.content; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</div>\\n  \";\n  return buffer;\n  }\n\nfunction program4(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n  \";\n  stack1 = helpers.each.call(depth0, depth0.prefab, {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\";\n  return buffer;\n  }\n\nfunction program6(depth0,data) {\n  \n  var buffer = \"\", stack1, stack2;\n  buffer += \"\\n  \";\n  stack2 = ((stack1 = ((stack1 = depth0.guilayer),stack1 == null || stack1 === false ? stack1 : stack1.content)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1);\n  if(stack2 || stack2 === 0) { buffer += stack2; }\n  buffer += \"\\n\";\n  return buffer;\n  }\n\n  buffer += \"<div>\";\n  if (stack1 = helpers.title) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.title; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"</div>\\r\\n\\r\\n<span id=\\\"btnSwitch\\\">\";\n  if (stack1 = helpers.btnSwitchToNextScene) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.btnSwitchToNextScene; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n\";\n  stack1 = helpers['if'].call(depth0, depth0.gameobject, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\\n\";\n  stack1 = helpers['if'].call(depth0, depth0.prefab, {hash:{},inverse:self.noop,fn:self.program(4, program4, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\\n\";\n  stack1 = helpers['if'].call(depth0, depth0.guilayer, {hash:{},inverse:self.noop,fn:self.program(6, program6, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  return buffer;\n  });\n\t\tvar sceneFunc = (function(scene) {\r\n\r\n  scene.events = {\r\n    '#btnSwitch': {\r\n      'click': function(event) {\r\n        event.data.scene.parent.show('scene2');\r\n      }\r\n    }\r\n  };\r\n\r\n  scene.expose({\r\n    btnSwitchToNextScene: \"Switch to next scene\",\r\n    test: \"Hallo\",\r\n    title: scene.name\r\n  });\r\n\r\n})(this);\r\n;\n\t\tif (typeof sceneFunc === \"function\") { sceneFunc = sceneFunc.apply(this, arguments); }\t\treturn sceneFunc;\t});\n\tsceneList[\"scene2\"] = new Scene(\"scene2\", [], function() {\n\t\tthis.localization = {\r\n\t\"en\": {},\r\n\t\"de\": {}\r\n}\r\n;\n\t\tthis.template = this.template || {};\n\t\tthis.template.source = TemplateEngine.compile(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n  \";\n  stack1 = helpers.each.call(depth0, depth0.gameobject, {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n    <div id=\\\"\";\n  if (stack1 = helpers.name) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.name; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\";\n  if (stack1 = helpers.content) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.content; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</div>\\n  \";\n  return buffer;\n  }\n\nfunction program4(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n  \";\n  stack1 = helpers.each.call(depth0, depth0.prefab, {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\";\n  return buffer;\n  }\n\nfunction program6(depth0,data) {\n  \n  var buffer = \"\", stack1, stack2;\n  buffer += \"\\n  \";\n  stack2 = ((stack1 = ((stack1 = depth0.guilayer),stack1 == null || stack1 === false ? stack1 : stack1.content)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1);\n  if(stack2 || stack2 === 0) { buffer += stack2; }\n  buffer += \"\\n\";\n  return buffer;\n  }\n\n  buffer += \"<div>\";\n  if (stack1 = helpers.test) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.test; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"</div>\\n\";\n  stack1 = helpers['if'].call(depth0, depth0.gameobject, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\\n\";\n  stack1 = helpers['if'].call(depth0, depth0.prefab, {hash:{},inverse:self.noop,fn:self.program(4, program4, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\\n\";\n  stack1 = helpers['if'].call(depth0, depth0.guilayer, {hash:{},inverse:self.noop,fn:self.program(6, program6, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  return buffer;\n  });\n\t\tvar sceneFunc = (function(scene) {\r\n\r\n  scene.expose({\r\n    test: 'Hallo'\r\n  });\r\n\r\n})(this);\r\n;\n\t\tif (typeof sceneFunc === \"function\") { sceneFunc = sceneFunc.apply(this, arguments); }\t\treturn sceneFunc;\t});\n\treturn sceneList;\n});",
    "define('mygame', ['lyria/game', 'mygame/scenelist', 'mygame/assetlist'], function(Game, sceneList, assetList) {\r\n  'use strict';\r\n  \r\n  // Create a new game object\r\n\tvar myGame = new Game();\r\n\t\r\n\t// Set generated scene files\r\n\tmyGame.director.scenes = sceneList;\r\n\t\r\n\t// If preloader is complete, everything in this function happens\r\n\tmyGame.preloader.on('complete', function() {\r\n\t  // Add \"scene1\" to director\r\n    myGame.director.add('scene1');\r\n    // Add \"scene2\" to director\r\n    myGame.director.add('scene2');\r\n\r\n    // Show \"scene1\"\r\n    myGame.director.show('scene1'); \r\n  });\r\n  \r\n  // Set asset list for preloader\r\n  myGame.preloader.assets = assetList;\r\n  \r\n  // Spin up the preloader\r\n  myGame.preloader.start();\r\n\t\r\n});"
  ]
}